name: "Unit tests"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  xcode-tests:
    name: Xcode 26.0 (${{ matrix.name }})
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: iOS
          destination: platform=iOS Simulator,arch=arm64,OS=26.0,name=iPhone 16 Pro Max
          command: test -enableCodeCoverage YES
        - name: macOS
          destination: platform=macOS,arch=arm64
          command: build # Will test again when there's a macOS 26 runner
        - name: tvOS
          destination: platform=tvOS Simulator,arch=arm64,OS=26.0,name=Apple TV 4K (3rd generation)
          command: test -enableCodeCoverage YES
        - name: visionOS
          destination: platform=visionOS Simulator,arch=arm64,OS=26.0,name=Apple Vision Pro
          command: test -enableCodeCoverage YES
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run post-clone script
      env:
        TMDB_ACCESS_TOKEN: ${{ secrets.TMDB_ACCESS_TOKEN }}
      run: ./ci_scripts/ci_post_clone.sh
    - if: matrix.name == 'macOS'
      name: Xcode 26.0 beta icon bug workaround
      run : rm -rf ./Kinova/AppIcon.icon
    - name: Install xcresultparser
      run: brew install xcresultparser
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_26.0.app
    - name: Build and run tests
      run: |
        xcrun xcodebuild clean ${{ matrix.command }} \
          -project Kinova.xcodeproj \
          -scheme Kinova \
          -destination "${{ matrix.destination }}" \
          -resultBundlePath "Artifacts/Kinova.xcresult" \
          CODE_SIGNING_ALLOWED=NO
    - name: Convert xcresult to JUnit
      run: xcresultparser -o junit Artifacts/Kinova.xcresult > Artifacts/Kinova.xml
    - name: Convert xcresult to HTML
      run: xcresultparser -o html Artifacts/Kinova.xcresult > Artifacts/Kinova.html
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload test results to Codecov
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Artifacts (${{ matrix.name }})
        path: Artifacts
