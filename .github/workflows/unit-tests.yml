name: "Unit tests"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  xcode-tests:
    name: Xcode tests (${{ matrix.name }})
    runs-on: macos-15
    strategy:
      matrix:
        include:
        - name: iOS
          destination: platform=iOS Simulator,arch=arm64,OS=18.5,name=iPhone 16
        - name: macOS
          destination: platform=macOS,arch=arm64
        - name: visionOS
          destination: platform=visionOS Simulator,arch=arm64,OS=2.5,name=Apple Vision Pro
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Create secrets file
      env:
        TMDB_ACCESS_TOKEN: ${{ secrets.TMDB_ACCESS_TOKEN }}
      run: ./Scripts/CreateSecretsFile.sh
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_16.4.app
    - name: Build and run tests
      env:
        WARNINGS_AS_ERRORS: "YES"
      run: xcrun xcodebuild test -project Kinova.xcodeproj -scheme Kinova -resultBundlePath "Artifacts/TestResults (${{ matrix.name }}).xcresult" -destination "${{ matrix.destination }}" CODE_SIGNING_ALLOWED=NO
    - name: Upload Xcode result bundle
      uses: actions/upload-artifact@v4
      with:
        name: TestResults (${{ matrix.name }})
        path: Artifacts
  linter:
    name: Swift linter
    runs-on: macos-15
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Create secrets file
      env:
        TMDB_ACCESS_TOKEN: ${{ secrets.TMDB_ACCESS_TOKEN }}
      run: ./Scripts/CreateSecretsFile.sh
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_16.4.app
    - name: Lint code
      run: xcrun swift format lint . -rps
